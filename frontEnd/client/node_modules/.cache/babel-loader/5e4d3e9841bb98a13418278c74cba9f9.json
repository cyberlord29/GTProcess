{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux'; // import createSagaMiddleware from 'redux-saga'\n\nimport reducers from './reducers'; // import sagas from './sagas'\n// import { default as reduxActionMiddleware } from './socket'\n\nimport { routerMiddleware } from 'react-router-redux';\nimport createHistory from 'history/createBrowserHistory';\nexport var history = createHistory();\n\nvar configureStore = function configureStore() {\n  //   const sagaMiddleware = createSagaMiddleware()\n  var middleware = applyMiddleware( // sagaMiddleware,\n  routerMiddleware(history) // reduxActionMiddleware\n  );\n\n  if (process.env.NODE_ENV !== 'production') {\n    var devToolsExtension = window.devToolsExtension;\n\n    if (typeof devToolsExtension === 'function') {\n      middleware = compose(middleware, devToolsExtension());\n    }\n  }\n\n  var store = createStore(reducers, middleware); //   sagaMiddleware.run(sagas)\n\n  return store;\n};\n\nexport default configureStore;","map":{"version":3,"sources":["/home/maneeshd/QM/lic-man/src/store.js"],"names":["applyMiddleware","compose","createStore","reducers","routerMiddleware","createHistory","history","configureStore","middleware","process","env","NODE_ENV","devToolsExtension","window","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD,C,CACA;;AAEA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;AACA;;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAO,IAAMC,OAAO,GAAGD,aAAa,EAA7B;;AAEP,IAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC7B;AAEE,MAAIC,UAAU,GAAGR,eAAe,EAC9B;AACAI,EAAAA,gBAAgB,CAACE,OAAD,CAFc,CAG9B;AAH8B,GAAhC;;AAMA,MAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAMC,iBAAiB,GAAGC,MAAM,CAACD,iBAAjC;;AACA,QAAI,OAAOA,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CJ,MAAAA,UAAU,GAAGP,OAAO,CAACO,UAAD,EAAaI,iBAAiB,EAA9B,CAApB;AACD;AACF;;AAED,MAAME,KAAK,GAAGZ,WAAW,CAACC,QAAD,EAAWK,UAAX,CAAzB,CAhB2B,CAiB7B;;AACE,SAAOM,KAAP;AACD,CAnBD;;AAqBA,eAAeP,cAAf","sourcesContent":["import { applyMiddleware, compose, createStore } from 'redux'\n// import createSagaMiddleware from 'redux-saga'\n\nimport reducers from './reducers'\n// import sagas from './sagas'\n// import { default as reduxActionMiddleware } from './socket'\n\nimport { routerMiddleware } from 'react-router-redux'\n\nimport createHistory from 'history/createBrowserHistory'\nexport const history = createHistory()\n\nconst configureStore = () => {\n//   const sagaMiddleware = createSagaMiddleware()\n\n  let middleware = applyMiddleware(\n    // sagaMiddleware,\n    routerMiddleware(history),\n    // reduxActionMiddleware\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    const devToolsExtension = window.devToolsExtension\n    if (typeof devToolsExtension === 'function') {\n      middleware = compose(middleware, devToolsExtension())\n    }\n  }\n\n  const store = createStore(reducers, middleware)\n//   sagaMiddleware.run(sagas)\n  return store\n}\n\nexport default configureStore\n"]},"metadata":{},"sourceType":"module"}